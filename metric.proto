syntax = "proto3";

enum MetricName {
	MN_UNKNOWN = 0;
	// The number of sent messages.
	MN_MESSAGE_COUNT = 1;
}

message MetricFilter {
	// The conversation to analyze. If unspecified, analyze all conversations in
	// the inbox.
	int64 conversation_id = 1;

	// Filter to between these timestamps. If unspecified, analyze all messages.
	int64 start_timestamp = 2;
	int64 end_timestamp = 3;

	string sender_name = 4;

	int64 max_participants = 5;
}

message MetricRequest {
	// Desired metric.
	MetricName metric = 1;

	MetricFilter filter = 2;

	// Begin options:

	// Compute metrics over smaller time ranges by splitting the timestamp range
	// into this number of chunks.
	int64 time_chunks = 3;
}

message MetricResponse {
	// The original request.
	MetricRequest request = 1;

	// This field is repeated because it could be chunked by sender name,
	// timestamp range, and/or conversation ID.
	repeated IntegerMetric int_metric = 2;
}

message IntegerMetric {
	int64 value = 1;

	// What this particular integer metric refers to. For example, if you make
	// a MetricRequest with no filter field, then we will produce an
	// IntegerMetric per conversation and sender name, so this filter field
	// would indicate the conversation ID. Or if time_chunks > 1, then this
	// filter field would indicate the actual time range that this metric refers
	// to.
	MetricFilter filter = 2;
}
